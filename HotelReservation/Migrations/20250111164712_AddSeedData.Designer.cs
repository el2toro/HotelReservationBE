// <auto-generated />
using System;
using HotelReservation.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelReservation.Migrations
{
    [DbContext(typeof(HotelReservationContext))]
    [Migration("20250111164712_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelReservation.Models.Amenity", b =>
                {
                    b.Property<int>("AmenityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmenityId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AmenityId");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            AmenityId = 1,
                            Description = "Free high-speed wireless internet",
                            Name = "WiFi"
                        },
                        new
                        {
                            AmenityId = 2,
                            Description = "Outdoor swimming pool",
                            Name = "Pool"
                        },
                        new
                        {
                            AmenityId = 3,
                            Description = "Fully equipped fitness center",
                            Name = "Gym"
                        },
                        new
                        {
                            AmenityId = 4,
                            Description = "Full-service spa offering massages, facials, and relaxation therapies",
                            Name = "Spa"
                        },
                        new
                        {
                            AmenityId = 5,
                            Description = "On-site restaurant with a variety of cuisines",
                            Name = "Restaurant"
                        },
                        new
                        {
                            AmenityId = 6,
                            Description = "Business center with high-speed internet and meeting rooms",
                            Name = "Business Center"
                        },
                        new
                        {
                            AmenityId = 7,
                            Description = "Free shuttle service to and from the airport",
                            Name = "Airport Shuttle"
                        },
                        new
                        {
                            AmenityId = 8,
                            Description = "Complimentary parking for guests",
                            Name = "Parking"
                        },
                        new
                        {
                            AmenityId = 9,
                            Description = "Hotel allows pets with designated pet rooms",
                            Name = "Pet-Friendly"
                        },
                        new
                        {
                            AmenityId = 10,
                            Description = "Personalized concierge service for reservations, tours, and more",
                            Name = "Concierge Service"
                        },
                        new
                        {
                            AmenityId = 11,
                            Description = "24-hour room service with a variety of menu options",
                            Name = "Room Service"
                        },
                        new
                        {
                            AmenityId = 12,
                            Description = "Flexible meeting and event spaces for business or personal gatherings",
                            Name = "Event Space"
                        },
                        new
                        {
                            AmenityId = 13,
                            Description = "Stylish lounge area with a selection of drinks and snacks",
                            Name = "Lounge"
                        },
                        new
                        {
                            AmenityId = 14,
                            Description = "Yoga, pilates, and fitness classes available to guests",
                            Name = "Fitness Classes"
                        },
                        new
                        {
                            AmenityId = 15,
                            Description = "On-site bar serving cocktails, beer, and wine",
                            Name = "Bar"
                        });
                });

            modelBuilder.Entity("HotelReservation.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingId");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2960),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 1,
                            RoomId = 1,
                            TotalAmount = 1500.00m
                        },
                        new
                        {
                            BookingId = 2,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2963),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 2,
                            RoomId = 3,
                            TotalAmount = 500.00m
                        },
                        new
                        {
                            BookingId = 3,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2969),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 13, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2964),
                            CheckOutDate = new DateTime(2025, 1, 18, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2968),
                            GuestId = 3,
                            RoomId = 4,
                            TotalAmount = 1500.00m
                        },
                        new
                        {
                            BookingId = 4,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2973),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 16, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2971),
                            CheckOutDate = new DateTime(2025, 1, 21, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2972),
                            GuestId = 4,
                            RoomId = 5,
                            TotalAmount = 1750.00m
                        },
                        new
                        {
                            BookingId = 5,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2977),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 14, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2975),
                            CheckOutDate = new DateTime(2025, 1, 19, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2976),
                            GuestId = 5,
                            RoomId = 6,
                            TotalAmount = 1200.00m
                        },
                        new
                        {
                            BookingId = 6,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2981),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 12, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2979),
                            CheckOutDate = new DateTime(2025, 1, 17, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2980),
                            GuestId = 6,
                            RoomId = 7,
                            TotalAmount = 1100.00m
                        },
                        new
                        {
                            BookingId = 7,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2985),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 18, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2982),
                            CheckOutDate = new DateTime(2025, 1, 23, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2984),
                            GuestId = 7,
                            RoomId = 8,
                            TotalAmount = 1300.00m
                        },
                        new
                        {
                            BookingId = 8,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2989),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 15, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2987),
                            CheckOutDate = new DateTime(2025, 1, 20, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2988),
                            GuestId = 8,
                            RoomId = 9,
                            TotalAmount = 1400.00m
                        },
                        new
                        {
                            BookingId = 9,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2993),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 13, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2991),
                            CheckOutDate = new DateTime(2025, 1, 18, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2992),
                            GuestId = 9,
                            RoomId = 10,
                            TotalAmount = 1600.00m
                        },
                        new
                        {
                            BookingId = 10,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2997),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 14, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2995),
                            CheckOutDate = new DateTime(2025, 1, 19, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2996),
                            GuestId = 10,
                            RoomId = 11,
                            TotalAmount = 1900.00m
                        },
                        new
                        {
                            BookingId = 11,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3026),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 17, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3024),
                            CheckOutDate = new DateTime(2025, 1, 22, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3025),
                            GuestId = 11,
                            RoomId = 12,
                            TotalAmount = 2100.00m
                        },
                        new
                        {
                            BookingId = 12,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3030),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 12, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3028),
                            CheckOutDate = new DateTime(2025, 1, 17, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3029),
                            GuestId = 12,
                            RoomId = 13,
                            TotalAmount = 1800.00m
                        },
                        new
                        {
                            BookingId = 13,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3034),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 13, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3032),
                            CheckOutDate = new DateTime(2025, 1, 18, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3033),
                            GuestId = 13,
                            RoomId = 14,
                            TotalAmount = 2200.00m
                        },
                        new
                        {
                            BookingId = 14,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3038),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 14, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3036),
                            CheckOutDate = new DateTime(2025, 1, 19, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3037),
                            GuestId = 14,
                            RoomId = 15,
                            TotalAmount = 2500.00m
                        },
                        new
                        {
                            BookingId = 15,
                            BookingDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3042),
                            BookingStatus = "Confirmed",
                            CheckInDate = new DateTime(2025, 1, 16, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3039),
                            CheckOutDate = new DateTime(2025, 1, 21, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3041),
                            GuestId = 15,
                            RoomId = 4,
                            TotalAmount = 1600.00m
                        });
                });

            modelBuilder.Entity("HotelReservation.Models.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuestId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuestId");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            GuestId = 1,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2894),
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            GuestId = 2,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2897),
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "987-654-3210"
                        },
                        new
                        {
                            GuestId = 3,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2900),
                            Email = "michael.johnson@example.com",
                            FirstName = "Michael",
                            LastName = "Johnson",
                            PhoneNumber = "555-123-4567"
                        },
                        new
                        {
                            GuestId = 4,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2902),
                            Email = "emily.davis@example.com",
                            FirstName = "Emily",
                            LastName = "Davis",
                            PhoneNumber = "555-234-5678"
                        },
                        new
                        {
                            GuestId = 5,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2905),
                            Email = "david.martinez@example.com",
                            FirstName = "David",
                            LastName = "Martinez",
                            PhoneNumber = "555-345-6789"
                        },
                        new
                        {
                            GuestId = 6,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2907),
                            Email = "olivia.lopez@example.com",
                            FirstName = "Olivia",
                            LastName = "Lopez",
                            PhoneNumber = "555-456-7890"
                        },
                        new
                        {
                            GuestId = 7,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2910),
                            Email = "james.garcia@example.com",
                            FirstName = "James",
                            LastName = "Garcia",
                            PhoneNumber = "555-567-8901"
                        },
                        new
                        {
                            GuestId = 8,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2912),
                            Email = "sophia.harris@example.com",
                            FirstName = "Sophia",
                            LastName = "Harris",
                            PhoneNumber = "555-678-9012"
                        },
                        new
                        {
                            GuestId = 9,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2915),
                            Email = "william.brown@example.com",
                            FirstName = "William",
                            LastName = "Brown",
                            PhoneNumber = "555-789-0123"
                        },
                        new
                        {
                            GuestId = 10,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2917),
                            Email = "charlotte.clark@example.com",
                            FirstName = "Charlotte",
                            LastName = "Clark",
                            PhoneNumber = "555-890-1234"
                        },
                        new
                        {
                            GuestId = 11,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2920),
                            Email = "benjamin.wilson@example.com",
                            FirstName = "Benjamin",
                            LastName = "Wilson",
                            PhoneNumber = "555-901-2345"
                        },
                        new
                        {
                            GuestId = 12,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2922),
                            Email = "isabella.young@example.com",
                            FirstName = "Isabella",
                            LastName = "Young",
                            PhoneNumber = "555-012-3456"
                        },
                        new
                        {
                            GuestId = 13,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2925),
                            Email = "lucas.allen@example.com",
                            FirstName = "Lucas",
                            LastName = "Allen",
                            PhoneNumber = "555-123-6789"
                        },
                        new
                        {
                            GuestId = 14,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2928),
                            Email = "amelia.sanchez@example.com",
                            FirstName = "Amelia",
                            LastName = "Sanchez",
                            PhoneNumber = "555-234-8901"
                        },
                        new
                        {
                            GuestId = 15,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2931),
                            Email = "ethan.thomas@example.com",
                            FirstName = "Ethan",
                            LastName = "Thomas",
                            PhoneNumber = "555-345-9012"
                        });
                });

            modelBuilder.Entity("HotelReservation.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("HotelId");

                    b.HasIndex("LocationId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2628),
                            Description = "A luxury hotel with modern amenities.",
                            IsAvailable = true,
                            LocationId = 1,
                            Name = "Luxury Stay",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 2,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2684),
                            Description = "Affordable accommodation for travelers.",
                            IsAvailable = true,
                            LocationId = 2,
                            Name = "Budget Inn",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 3,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2686),
                            Description = "A luxury palace with royal rooms and services.",
                            IsAvailable = true,
                            LocationId = 3,
                            Name = "The Grand Palace",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 4,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2688),
                            Description = "A modern resort with breathtaking views of the mountains.",
                            IsAvailable = true,
                            LocationId = 4,
                            Name = "Skyline Resort",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 5,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2689),
                            Description = "A tranquil retreat in the desert with an all-inclusive experience.",
                            IsAvailable = true,
                            LocationId = 5,
                            Name = "Desert Oasis",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 6,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2691),
                            Description = "An oceanfront hotel offering water sports and excursions.",
                            IsAvailable = true,
                            LocationId = 6,
                            Name = "Blue Lagoon Hotel",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 7,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2693),
                            Description = "A cozy lodge nestled in the mountains with hiking trails.",
                            IsAvailable = true,
                            LocationId = 7,
                            Name = "Mountain View Lodge",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 8,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2695),
                            Description = "A stylish boutique hotel located in the heart of downtown.",
                            IsAvailable = true,
                            LocationId = 8,
                            Name = "Urban Escape",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 9,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2696),
                            Description = "A beachfront inn with stunning ocean views.",
                            IsAvailable = true,
                            LocationId = 9,
                            Name = "The Sea Breeze Inn",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 10,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2698),
                            Description = "A contemporary hotel with an outdoor pool and rooftop bar.",
                            IsAvailable = true,
                            LocationId = 10,
                            Name = "City Lights Hotel",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 11,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2700),
                            Description = "A 5-star resort with luxury amenities and fine dining.",
                            IsAvailable = true,
                            LocationId = 11,
                            Name = "Golden Sands Resort",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 12,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2701),
                            Description = "A serene hotel in the forest with eco-friendly practices.",
                            IsAvailable = true,
                            LocationId = 12,
                            Name = "Forest Retreat",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 13,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2750),
                            Description = "A lakeside hotel offering boat tours and fishing activities.",
                            IsAvailable = true,
                            LocationId = 13,
                            Name = "Lakeview Grand",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 14,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2752),
                            Description = "An exclusive hotel with luxurious rooms and a private spa.",
                            IsAvailable = true,
                            LocationId = 14,
                            Name = "Sapphire Palace",
                            Rating = 0
                        },
                        new
                        {
                            HotelId = 15,
                            CreatedAt = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(2755),
                            Description = "A refined hotel with manicured gardens and elegant dining.",
                            IsAvailable = true,
                            LocationId = 15,
                            Name = "Royal Garden Hotel",
                            Rating = 0
                        });
                });

            modelBuilder.Entity("HotelReservation.Models.HotelAmenity", b =>
                {
                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.HasKey("HotelId", "AmenityId");

                    b.HasIndex("AmenityId");

                    b.ToTable("HotelAmenities");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            AmenityId = 1
                        },
                        new
                        {
                            HotelId = 1,
                            AmenityId = 2
                        },
                        new
                        {
                            HotelId = 2,
                            AmenityId = 1
                        },
                        new
                        {
                            HotelId = 1,
                            AmenityId = 4
                        },
                        new
                        {
                            HotelId = 1,
                            AmenityId = 5
                        },
                        new
                        {
                            HotelId = 2,
                            AmenityId = 6
                        },
                        new
                        {
                            HotelId = 2,
                            AmenityId = 7
                        },
                        new
                        {
                            HotelId = 3,
                            AmenityId = 8
                        },
                        new
                        {
                            HotelId = 3,
                            AmenityId = 9
                        },
                        new
                        {
                            HotelId = 4,
                            AmenityId = 10
                        },
                        new
                        {
                            HotelId = 4,
                            AmenityId = 11
                        },
                        new
                        {
                            HotelId = 5,
                            AmenityId = 12
                        },
                        new
                        {
                            HotelId = 5,
                            AmenityId = 13
                        },
                        new
                        {
                            HotelId = 6,
                            AmenityId = 14
                        },
                        new
                        {
                            HotelId = 6,
                            AmenityId = 15
                        });
                });

            modelBuilder.Entity("HotelReservation.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Address = "123 Main Street",
                            City = "New York",
                            Country = "USA",
                            PostalCode = "10001",
                            State = "NY"
                        },
                        new
                        {
                            LocationId = 2,
                            Address = "456 High Street",
                            City = "San Francisco",
                            Country = "USA",
                            PostalCode = "94101",
                            State = "CA"
                        },
                        new
                        {
                            LocationId = 3,
                            Address = "789 Ocean Avenue",
                            City = "Miami",
                            Country = "USA",
                            PostalCode = "33101",
                            State = "FL"
                        },
                        new
                        {
                            LocationId = 4,
                            Address = "101 Lakeview Drive",
                            City = "Chicago",
                            Country = "USA",
                            PostalCode = "60601",
                            State = "IL"
                        },
                        new
                        {
                            LocationId = 5,
                            Address = "202 Mountain Road",
                            City = "Denver",
                            Country = "USA",
                            PostalCode = "80202",
                            State = "CO"
                        },
                        new
                        {
                            LocationId = 6,
                            Address = "303 Sunset Boulevard",
                            City = "Los Angeles",
                            Country = "USA",
                            PostalCode = "90001",
                            State = "CA"
                        },
                        new
                        {
                            LocationId = 7,
                            Address = "404 Maple Street",
                            City = "Toronto",
                            Country = "Canada",
                            PostalCode = "M5H 2N2",
                            State = "ON"
                        },
                        new
                        {
                            LocationId = 8,
                            Address = "505 Rainforest Lane",
                            City = "Seattle",
                            Country = "USA",
                            PostalCode = "98101",
                            State = "WA"
                        },
                        new
                        {
                            LocationId = 9,
                            Address = "606 Desert Drive",
                            City = "Phoenix",
                            Country = "USA",
                            PostalCode = "85001",
                            State = "AZ"
                        },
                        new
                        {
                            LocationId = 10,
                            Address = "707 Skyline Avenue",
                            City = "Atlanta",
                            Country = "USA",
                            PostalCode = "30301",
                            State = "GA"
                        },
                        new
                        {
                            LocationId = 11,
                            Address = "808 Bay Street",
                            City = "San Diego",
                            Country = "USA",
                            PostalCode = "92101",
                            State = "CA"
                        },
                        new
                        {
                            LocationId = 12,
                            Address = "909 Hillcrest Road",
                            City = "Austin",
                            Country = "USA",
                            PostalCode = "73301",
                            State = "TX"
                        },
                        new
                        {
                            LocationId = 13,
                            Address = "123 Orchard Lane",
                            City = "Vancouver",
                            Country = "Canada",
                            PostalCode = "V6B 2K4",
                            State = "BC"
                        },
                        new
                        {
                            LocationId = 14,
                            Address = "456 Alpine Trail",
                            City = "Salt Lake City",
                            Country = "USA",
                            PostalCode = "84101",
                            State = "UT"
                        },
                        new
                        {
                            LocationId = 15,
                            Address = "789 Harbor Drive",
                            City = "Boston",
                            Country = "USA",
                            PostalCode = "02108",
                            State = "MA"
                        });
                });

            modelBuilder.Entity("HotelReservation.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            Amount = 1500.00m,
                            BookingId = 1,
                            PaymentDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3067),
                            PaymentMethod = "Credit Card",
                            PaymentStatus = "Paid"
                        },
                        new
                        {
                            PaymentId = 2,
                            Amount = 500.00m,
                            BookingId = 2,
                            PaymentDate = new DateTime(2025, 1, 11, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3070),
                            PaymentMethod = "Cash",
                            PaymentStatus = "Paid"
                        },
                        new
                        {
                            PaymentId = 3,
                            Amount = 1500.00m,
                            BookingId = 3,
                            PaymentDate = new DateTime(2025, 1, 12, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3072),
                            PaymentMethod = "Credit Card",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 4,
                            Amount = 1750.00m,
                            BookingId = 4,
                            PaymentDate = new DateTime(2025, 1, 13, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3075),
                            PaymentMethod = "Debit Card",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 5,
                            Amount = 1200.00m,
                            BookingId = 5,
                            PaymentDate = new DateTime(2025, 1, 12, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3076),
                            PaymentMethod = "PayPal",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 6,
                            Amount = 1100.00m,
                            BookingId = 6,
                            PaymentDate = new DateTime(2025, 1, 14, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3078),
                            PaymentMethod = "Credit Card",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 7,
                            Amount = 1300.00m,
                            BookingId = 7,
                            PaymentDate = new DateTime(2025, 1, 12, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3080),
                            PaymentMethod = "Credit Card",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 8,
                            Amount = 1400.00m,
                            BookingId = 8,
                            PaymentDate = new DateTime(2025, 1, 13, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3082),
                            PaymentMethod = "Debit Card",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 9,
                            Amount = 1600.00m,
                            BookingId = 9,
                            PaymentDate = new DateTime(2025, 1, 12, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3084),
                            PaymentMethod = "Credit Card",
                            PaymentStatus = "Pending"
                        },
                        new
                        {
                            PaymentId = 10,
                            Amount = 1900.00m,
                            BookingId = 10,
                            PaymentDate = new DateTime(2025, 1, 14, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3086),
                            PaymentMethod = "PayPal",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 11,
                            Amount = 2100.00m,
                            BookingId = 11,
                            PaymentDate = new DateTime(2025, 1, 13, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3088),
                            PaymentMethod = "Bank Transfer",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 12,
                            Amount = 1800.00m,
                            BookingId = 12,
                            PaymentDate = new DateTime(2025, 1, 12, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3090),
                            PaymentMethod = "Debit Card",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 13,
                            Amount = 2200.00m,
                            BookingId = 13,
                            PaymentDate = new DateTime(2025, 1, 13, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3091),
                            PaymentMethod = "Credit Card",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 14,
                            Amount = 2500.00m,
                            BookingId = 14,
                            PaymentDate = new DateTime(2025, 1, 12, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3093),
                            PaymentMethod = "PayPal",
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            PaymentId = 15,
                            Amount = 1600.00m,
                            BookingId = 15,
                            PaymentDate = new DateTime(2025, 1, 14, 17, 47, 12, 410, DateTimeKind.Local).AddTicks(3095),
                            PaymentMethod = "Bank Transfer",
                            PaymentStatus = "Pending"
                        });
                });

            modelBuilder.Entity("HotelReservation.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Capacity = 4,
                            HotelId = 1,
                            IsAvailable = true,
                            PricePerNight = 300.00m,
                            RoomNumber = "101",
                            RoomType = "Suite"
                        },
                        new
                        {
                            RoomId = 2,
                            Capacity = 2,
                            HotelId = 1,
                            IsAvailable = true,
                            PricePerNight = 200.00m,
                            RoomNumber = "102",
                            RoomType = "Double"
                        },
                        new
                        {
                            RoomId = 3,
                            Capacity = 1,
                            HotelId = 2,
                            IsAvailable = true,
                            PricePerNight = 100.00m,
                            RoomNumber = "201",
                            RoomType = "Single"
                        },
                        new
                        {
                            RoomId = 4,
                            Capacity = 4,
                            HotelId = 1,
                            IsAvailable = true,
                            PricePerNight = 500.00m,
                            RoomNumber = "103",
                            RoomType = "Penthouse"
                        },
                        new
                        {
                            RoomId = 5,
                            Capacity = 2,
                            HotelId = 1,
                            IsAvailable = true,
                            PricePerNight = 350.00m,
                            RoomNumber = "104",
                            RoomType = "Junior Suite"
                        },
                        new
                        {
                            RoomId = 6,
                            Capacity = 2,
                            HotelId = 2,
                            IsAvailable = true,
                            PricePerNight = 150.00m,
                            RoomNumber = "202",
                            RoomType = "Double"
                        },
                        new
                        {
                            RoomId = 7,
                            Capacity = 1,
                            HotelId = 2,
                            IsAvailable = true,
                            PricePerNight = 80.00m,
                            RoomNumber = "203",
                            RoomType = "Single"
                        },
                        new
                        {
                            RoomId = 8,
                            Capacity = 4,
                            HotelId = 3,
                            IsAvailable = true,
                            PricePerNight = 400.00m,
                            RoomNumber = "301",
                            RoomType = "Suite"
                        },
                        new
                        {
                            RoomId = 9,
                            Capacity = 2,
                            HotelId = 3,
                            IsAvailable = true,
                            PricePerNight = 220.00m,
                            RoomNumber = "302",
                            RoomType = "Double"
                        },
                        new
                        {
                            RoomId = 10,
                            Capacity = 2,
                            HotelId = 4,
                            IsAvailable = true,
                            PricePerNight = 120.00m,
                            RoomNumber = "401",
                            RoomType = "Studio"
                        },
                        new
                        {
                            RoomId = 11,
                            Capacity = 3,
                            HotelId = 4,
                            IsAvailable = true,
                            PricePerNight = 300.00m,
                            RoomNumber = "402",
                            RoomType = "Deluxe"
                        },
                        new
                        {
                            RoomId = 12,
                            Capacity = 4,
                            HotelId = 5,
                            IsAvailable = true,
                            PricePerNight = 450.00m,
                            RoomNumber = "501",
                            RoomType = "King Suite"
                        },
                        new
                        {
                            RoomId = 13,
                            Capacity = 5,
                            HotelId = 5,
                            IsAvailable = true,
                            PricePerNight = 250.00m,
                            RoomNumber = "502",
                            RoomType = "Family Room"
                        },
                        new
                        {
                            RoomId = 14,
                            Capacity = 3,
                            HotelId = 6,
                            IsAvailable = true,
                            PricePerNight = 600.00m,
                            RoomNumber = "601",
                            RoomType = "Oceanfront Suite"
                        },
                        new
                        {
                            RoomId = 15,
                            Capacity = 2,
                            HotelId = 6,
                            IsAvailable = true,
                            PricePerNight = 200.00m,
                            RoomNumber = "602",
                            RoomType = "Standard"
                        });
                });

            modelBuilder.Entity("HotelReservation.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HotelReservation.Models.Booking", b =>
                {
                    b.HasOne("HotelReservation.Models.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservation.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelReservation.Models.Hotel", b =>
                {
                    b.HasOne("HotelReservation.Models.Location", "Location")
                        .WithMany("Hotels")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("HotelReservation.Models.HotelAmenity", b =>
                {
                    b.HasOne("HotelReservation.Models.Amenity", "Amenity")
                        .WithMany("HotelAmenities")
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservation.Models.Hotel", "Hotel")
                        .WithMany("HotelAmenities")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelReservation.Models.Payment", b =>
                {
                    b.HasOne("HotelReservation.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HotelReservation.Models.Room", b =>
                {
                    b.HasOne("HotelReservation.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelReservation.Models.Amenity", b =>
                {
                    b.Navigation("HotelAmenities");
                });

            modelBuilder.Entity("HotelReservation.Models.Booking", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("HotelReservation.Models.Guest", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HotelReservation.Models.Hotel", b =>
                {
                    b.Navigation("HotelAmenities");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelReservation.Models.Location", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
